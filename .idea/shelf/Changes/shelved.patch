Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1732610984346)
+++ b/.idea/modules.xml	(date 1732610984346)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/Heart-Disease-Prdiction-Python-Project.iml" filepath="$PROJECT_DIR$/.idea/Heart-Disease-Prdiction-Python-Project.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/Heart-Disease-Prdiction-Python-Project.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/Heart-Disease-Prdiction-Python-Project.iml b/.idea/Heart-Disease-Prdiction-Python-Project.iml
new file mode 100644
--- /dev/null	(date 1732611255244)
+++ b/.idea/Heart-Disease-Prdiction-Python-Project.iml	(date 1732611255244)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/.venv" />
+    </content>
+    <orderEntry type="jdk" jdkName="Python 3.12" jdkType="Python SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1732610984429)
+++ b/.idea/vcs.xml	(date 1732610984429)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: Import_Datasets.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Import_Datasets.py b/Import_Datasets.py
new file mode 100644
--- /dev/null	(date 1732611222458)
+++ b/Import_Datasets.py	(date 1732611222458)
@@ -0,0 +1,23 @@
+from ucimlrepo import fetch_ucirepo
+import pandas as pd
+
+# Ambil dataset dengan ID 45 (Heart Disease dataset)
+heart_disease = fetch_ucirepo(id=45)
+
+# Dapatkan data fitur (X) dan target (y)
+X = heart_disease.data.features
+y = heart_disease.data.targets
+
+# menggabungkan colom fitures dan colom target menjadi satu dataframe menggunakan methode concat
+heart_disease_df = pd.concat([X, y], axis=1)
+
+# menyimpan dataframe ke dalam file CSV
+# heart_disease_df.to_csv('heart_disease_datasets.csv', index=False)
+
+# Tampilkan metadata tentang dataset
+print("Metadata:")
+print(heart_disease.metadata)
+
+# Tampilkan informasi variabel
+print("\nInformasi Variabel:")
+print(heart_disease.variables)
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1732611255268)
+++ b/.idea/misc.xml	(date 1732611255268)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Black">
+    <option name="sdkName" value="Python 3.12 (Heart-Disease-Prdiction-Python-Project)" />
+  </component>
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.12" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: Logistic_Regression.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Logistic_Regression.py b/Logistic_Regression.py
new file mode 100644
--- /dev/null	(date 1732611239029)
+++ b/Logistic_Regression.py	(date 1732611239029)
@@ -0,0 +1,88 @@
+# Import library yang diperlukan
+import pandas as pd
+from sklearn.model_selection import train_test_split, GridSearchCV
+from sklearn.preprocessing import StandardScaler
+from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix, classification_report
+from sklearn.linear_model import LogisticRegression
+import joblib
+
+# Meload dan Membaca data dari file CSV ke dalam DataFrame
+df = pd.read_csv('datasets/heart_disease_datasets.csv')
+print("Dataset yang di-load:")
+print(df.head(10)) # menampilkan 10 baris pertama
+
+# Menampilkan informasi umum tentang dataset (jumlah kolom, tipe data, nilai null, dll.)
+print("\nInfo dataset:")
+print(df.info())
+
+# Mengatasi missing values pada data menghapus baris nilai yang hilang menggunakan methode dropna
+df = df.dropna()
+print("\nInfo dataset setelah menghapus nilai yang hilang:")
+print(df.info())
+
+# Memisahkan fitur (X) dan target (y)
+# Menghapus kolom target 'num' dari colom fitur X, dan mengubah kolom target menjadi biner dengan fungsi lambda (0 = no risk, 1 = at risk)
+X = df.drop('num', axis=1)  # Fitur (X)
+y = df['num'].apply(lambda x: 1 if x > 0 else 0)  # Target (y)
+print("\nTarget biner (y):")
+print(y.value_counts()) # menghitung jumlah colom target y
+
+# membagi Bagi Dataset menjadi Data Latih dan Uji yakni 70% untuk data latih dan 30% untuk data uji
+X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
+
+# preprocassing data atau melakukan Standarisasi Fitur
+scaler = StandardScaler()
+X_train_scaled = scaler.fit_transform(X_train)
+X_test_scaled = scaler.transform(X_test)
+
+# menampilkan masing-masing variable yang sudah di scaling
+print(f"X_train_scaled (3 data pertama):\n{X_train_scaled[:3]}\n")
+print(f"X_test_scaled (3 data pertama):\n{X_test_scaled[:3]}\n")
+
+
+
+# Melatih Model menggunakan Logistic Regression dengan data yang sudah distandarisasi
+
+# Membuat objek Logistic Regression dengan parameter default
+log_reg = LogisticRegression()
+
+# Membuat model Logistic Regression dengan parameter yang disesuaikan
+log_reg_model = LogisticRegression(
+    solver='liblinear',  # Optimasi yang cocok untuk dataset kecil/sedang
+    C=0.01,              # Regularisasi kuat dengan menetapkan parameter(0.01) untuk mencegah overfitting
+    penalty='l2',        # jenis regularisasi L2 (Ridge) untuk membantu memberikan hasil yang stabil.
+    max_iter=1000        # Batas iterasi maksimum untuk mencapai konvergensi
+)
+
+log_reg_model.fit(X_train_scaled, y_train)
+y_pred_logreg = log_reg_model.predict(X_test_scaled)
+
+# Evaluasi Model Logistic Regression
+accuracy_logreg = accuracy_score(y_test, y_pred_logreg)     # menghitung acuracy dari model
+precision_logreg = precision_score(y_test, y_pred_logreg)   # menghitung Presisi dari model
+recall_logreg = recall_score(y_test, y_pred_logreg)         # menghitung recall dari model
+f1_logreg = f1_score(y_test, y_pred_logreg)                 # menghitung F1 score dari model
+conf_matrix = confusion_matrix(y_test, y_pred_logreg)       # menghitung confusion matrix dari model yang sudah dilatih
+
+# Ravel Confusion Matrix untuk mendapatkan TN, FP, FN, TP
+tn, fp, fn, tp = conf_matrix.ravel()
+
+# Cetak nilai TP, TN, FP, FN
+print("Confusion Matrix:\n", conf_matrix)
+
+print(f'\nTP (True Positive) : {tp}')
+print(f'TN (True Negative) : {tn}')
+print(f'FP (False Positive): {fp}')
+print(f'FN (False Negative): {fn}')
+
+print(f"\nAkurasi Logistic Regression: {accuracy_logreg * 100:.2f}%")
+print(f"Precision: {precision_logreg:.4f}")
+print(f"Recall: {recall_logreg:.4f}")
+print(f"F1-Score: {f1_logreg:.4f}")
+
+print("\nClassification Report:\n", classification_report(y_test, y_pred_logreg))
+
+# menyimpan model kedalam joblib dengan ekstension .pkl
+joblib.dump(log_reg_model, 'modelLogistic/model_Logistic.joblib')
+joblib.dump(scaler, 'modelLogistic/scaler_logistic.joblib')
+print("model dan scaler berhasil di simpan")
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	(date 1732610984404)
+++ b/.idea/inspectionProfiles/profiles_settings.xml	(date 1732610984404)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: Heart_Disease_Prediction.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Heart_Disease_Prediction.py b/Heart_Disease_Prediction.py
new file mode 100644
--- /dev/null	(date 1732611255189)
+++ b/Heart_Disease_Prediction.py	(date 1732611255189)
@@ -0,0 +1,58 @@
+# Import library yang diperlukan
+import pandas as pd
+from flask import Flask, request, jsonify
+import joblib
+
+# Inisialisasi aplikasi Flask
+app = Flask(__name__)
+
+# Load model dan scaler dari file yang sudah disimpan
+# Pastikan file model dan scaler tersedia di direktori yang benar
+model = joblib.load('modelLogistic/model_Logistic.joblib')  # Model Random Forest
+scaler = joblib.load('modelLogistic/scaler_logistic.joblib')  # Scaler untuk standarisasi fitur
+
+# Daftar fitur yang digunakan untuk prediksi
+FEATURES = ['age', 'sex', 'cp', 'trestbps', 'chol', 'fbs',
+            'restecg', 'thalach', 'exang', 'oldpeak', 'slope', 'ca', 'thal']
+
+
+# Endpoint untuk melakukan prediksi risiko penyakit jantung
+@app.route('/predict', methods=['POST'])
+def predict():
+    """
+    Endpoint '/predict' untuk memprediksi risiko penyakit jantung.
+    Menerima input berupa JSON dengan fitur yang diperlukan,
+    melakukan standarisasi data, dan mengembalikan hasil prediksi.
+    """
+    try:
+        # Mendapatkan data JSON dari request
+        data = request.get_json()
+
+        # Pastikan format input sesuai dengan fitur yang diharapkan
+        input_data = pd.DataFrame([data], columns=FEATURES)
+
+        # Standarisasi input menggunakan scaler yang sudah dilatih
+        input_scaled = scaler.transform(input_data)
+
+        # Prediksi menggunakan model yang sudah dilatih
+        prediction = model.predict(input_scaled)[0]  # Hasil prediksi (0 atau 1)
+        probabilities = model.predict_proba(input_scaled)[0]  # Probabilitas dari tiap kelas
+
+        # Buat respon hasil prediksi dalam format JSON
+        response = {
+            "probability": {
+                "no_risk": float(probabilities[0]),  # Probabilitas tidak berisiko
+                "at_risk": float(probabilities[1])  # Probabilitas berisiko
+            },
+            "risk": "at risk" if prediction == 1 else "no risk"  # Penilaian risiko berdasarkan prediksi
+        }
+        return jsonify(response), 200  # Mengembalikan respon dengan status 200 (OK)
+
+    except Exception as e:
+        # Tangani error dan kembalikan pesan error dalam format JSON
+        return jsonify({"error": str(e)}), 500  # Status 500 menunjukkan adanya kesalahan server
+
+
+# Jalankan aplikasi Flask pada host dan port yang ditentukan
+if __name__ == '__main__':
+    app.run(host='0.0.0.0', port=5000, debug=True)
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1732610982945)
+++ b/.idea/.gitignore	(date 1732610982945)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
--- /dev/null	(date 1732610984280)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1732610984280)
@@ -0,0 +1,14 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="PyPackageRequirementsInspection" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="ignoredPackages">
+        <value>
+          <list size="1">
+            <item index="0" class="java.lang.String" itemvalue="psycopg2" />
+          </list>
+        </value>
+      </option>
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
